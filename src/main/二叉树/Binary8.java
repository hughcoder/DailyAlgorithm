package main.二叉树;


//给定一棵二叉搜索树，请找出其中的第k小的结点。例如， （5，3，7，2，4，6，8）    中，按结点数值大小顺序第三小结点的值为4。
//二叉查找树（Binary Search Tree），（又：二叉搜索树，二叉排序树）它或者是一棵空树，或者是具有下列性质的二叉树： 若它的左子树不空，
// 则左子树上所有结点的值均小于它的根结点的值； 若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值； 它的左、右子树也分别为二叉排序树。
//简单来说 二叉搜索树 对应每个节点 左<根<右   后序遍历 ：左右根  // 我们能确定最后的一个值是根节点

public class Binary8 {

    TreeNode KthNode(TreeNode pRoot, int k) {
        return null;
    }


}
